-- CREATE DATABASE --
CREATE DATABASE IF NOT EXISTS `POKEMON_APP`;
-- DROP DATABASE `POKEMON_APP`;

USE `POKEMON_APP`;

-- CREATE TABLES --
CREATE TABLE IF NOT EXISTS `WILD_POKEMON` (
    `ID` INT NOT NULL,
    `POKEDEX_ID` INT,
    `NAME` VARCHAR(30) NOT NULL,
    `IS_DEFAULT` BOOLEAN,
    `HP` INT(3),
    `ATK` INT(3),
    `DEF` INT(3),
    `SP_ATK` INT(3),
    `SP_DEF` INT(3),
    `SPEED` INT(3),
    `SPRITE` VARCHAR(100)
);

CREATE TABLE IF NOT EXISTS `TYPE` (
    `ID` INT NOT NULL,
    `NAME` VARCHAR(8) NOT NULL
);

CREATE TABLE IF NOT EXISTS `WILD_POKEMON_TYPE` (
    `WILD_POKEMON_ID` INT NOT NULL,
    `TYPE_ID` INT NOT NULL
);

CREATE TABLE IF NOT EXISTS `ABILITY` (
	`ID` INT NOT NULL,
    `NAME` VARCHAR(30),
    `DESCRIPTION` VARCHAR(200)
);

CREATE TABLE IF NOT EXISTS `wILD_POKEMON_ABILITY` (
	`WILD_POKEMON_ID` INT NOT NULL,
    `ABILITY_ID` INT NOT NULL
);

CREATE TABLE IF NOT EXISTS `MOVE` (
	`ID` INT NOT NULL,
    `NAME` VARCHAR(50),
    `DESCRIPTION` VARCHAR(200),
    `POWER` INT(3),
    `ACCURACY` INT(3),
    `PP` INT(2),
    `DAMAGE_CATEGORY` VARCHAR(10),
    `TYPE_ID` INT
);


CREATE TABLE IF NOT EXISTS `wILD_POKEMON_MOVE` (
	`wILD_POKEMON_ID` INT NOT NULL,
    `MOVE_ID` INT NOT NULL
);

CREATE TABLE IF NOT EXISTS `ITEM` (
    `ID` INT NOT NULL,
    `NAME` VARCHAR(50),
    `DESCRIPTION` VARCHAR(250),
    `SPRITE` VARCHAR(200)
);

-- DROP TABLE `NATURE`;

CREATE TABLE IF NOT EXISTS `NATURE` (
	`ID` INT NOT NULL,
    `NAME` VARCHAR(20)
);

-- DROP TABLE `USER`;

CREATE TABLE IF NOT EXISTS `USER` (
	`USERNAME` VARCHAR(12) NOT NULL,
    `PASSWORD` VARCHAR(60) NOT NULL,
    `EMAIL` VARCHAR(30) NOT NULL UNIQUE,
    `ENABLED` BOOLEAN NOT NULL
);

CREATE TABLE IF NOT EXISTS `TEAM` (
	`ID` INT NOT NULL,
	`USERNAME` VARCHAR(12) NOT NULL,
    `NAME` VARCHAR(50)
);

CREATE TABLE IF NOT EXISTS `POKEMON` (
	`ID` INT NOT NULL,
    `TEAM_ID` INT NOT NULL,
    `USERNAME` VARCHAR(12) NOT NULL,
    `WILD_POKEMON_ID` INT NOT NULL,
    `NICKNAME` VARCHAR(60),
    `ABILITY_ID` INT NOT NULL,
    `NATURE_ID` INT NOT NULL,
    `ITEM_ID` INT,
    `HP_IV` INT(2),
    `ATK_IV` INT(2),
    `DEF_IV` INT(2),
    `SP_ATK_IV` INT(2),
    `SP_DEF_IV` INT(2),
    `SPEED_IV` INT(2),
    `HP_EV` INT(3),
    `ATK_EV` INT(3),
    `DEF_EV` INT(3),
    `SP_ATK_EV` INT(3),
    `SP_DEF_EV` INT(3),
    `SPEED_EV` INT(3)
);

CREATE TABLE IF NOT EXISTS `POKEMON_MOVE` (
    `POKEMON_ID` INT NOT NULL,
    `TEAM_ID` INT NOT NULL,
    `USERNAME` VARCHAR(12) NOT NULL,
    `MOVE_ID` INT NOT NULL
);

-- PRIMRAY KEY --
ALTER TABLE `WILD_POKEMON` ADD CONSTRAINT `PK_WILD_POKEMON` PRIMARY KEY (`ID`);
ALTER TABLE `TYPE` ADD CONSTRAINT `PK_TYPE` PRIMARY KEY (`ID`);
ALTER TABLE `WILD_POKEMON_TYPE` ADD CONSTRAINT `PK_WILD_POKEMON_TYPE` PRIMARY KEY (`WILD_POKEMON_ID`, `TYPE_ID`);
ALTER TABLE `ABILITY` ADD CONSTRAINT `PK_ABILITY` PRIMARY KEY (`ID`);
ALTER TABLE `WILD_POKEMON_ABILITY` ADD CONSTRAINT `PK_WILD_POKEMON_ABILITY` PRIMARY KEY (`WILD_POKEMON_ID`, `ABILITY_ID`);
ALTER TABLE `MOVE` ADD CONSTRAINT `PK_MOVE` PRIMARY KEY (`ID`);
ALTER TABLE `WILD_POKEMON_MOVE` ADD CONSTRAINT `PK_WILD_POKEMON_MOVE` PRIMARY KEY (`WILD_POKEMON_ID`, `MOVE_ID`);
ALTER TABLE `USER` ADD CONSTRAINT `PK_USER` PRIMARY KEY (`USERNAME`);
ALTER TABLE `ITEM` ADD CONSTRAINT `PK_ITEM` PRIMARY KEY (`ID`);
ALTER TABLE `TEAM` ADD CONSTRAINT `PK_TEAM` PRIMARY KEY (`ID`, `USERNAME`);
ALTER TABLE `POKEMON` ADD CONSTRAINT `PK_POKEMON` PRIMARY KEY (`ID`, `TEAM_ID`, `USERNAME`);
ALTER TABLE `POKEMON_MOVE` ADD CONSTRAINT `PK_POKEMON_MOVE` PRIMARY KEY (`POKEMON_ID`, `TEAM_ID`, `USERNAME`, `MOVE_ID`);
ALTER TABLE `NATURE` ADD CONSTRAINT `PK_NATURE` PRIMARY KEY (`ID`);

-- FOREIGN KEY --
ALTER TABLE `WILD_POKEMON_TYPE` ADD CONSTRAINT `FK_WILD_POKEMON_TYPE_POKEMON` FOREIGN KEY (`WILD_POKEMON_ID`) REFERENCES `WILD_POKEMON`(`ID`);
ALTER TABLE `WILD_POKEMON_TYPE` ADD CONSTRAINT `FK_WILD_POKEMON_TYPE_TYPE` FOREIGN KEY (`TYPE_ID`) REFERENCES `TYPE`(`ID`);
ALTER TABLE `WILD_POKEMON_ABILITY` ADD CONSTRAINT `FK_WILD_POKEMON_ABILITY_POKEMON` FOREIGN KEY (`WILD_POKEMON_ID`) REFERENCES `WILD_POKEMON`(`ID`);
ALTER TABLE `WILD_POKEMON_ABILITY` ADD CONSTRAINT `FK_WILD_POKEMON_ABILITY_ABILITY` FOREIGN KEY (`ABILITY_ID`) REFERENCES `ABILITY`(`ID`);
ALTER TABLE `MOVE` ADD CONSTRAINT `FK_MOVE_TYPE` FOREIGN KEY (`TYPE_ID`) REFERENCES `TYPE`(`ID`);
ALTER TABLE `WILD_POKEMON_MOVE` ADD CONSTRAINT `FK_WILD_POKEMON_MOVE_POKEMON` FOREIGN KEY (`WILD_POKEMON_ID`) REFERENCES `WILD_POKEMON`(`ID`);
ALTER TABLE `WILD_POKEMON_MOVE` ADD CONSTRAINT `FK_WILD_POKEMON_MOVE_MOVE` FOREIGN KEY (`MOVE_ID`) REFERENCES `MOVE`(`ID`);
ALTER TABLE `TEAM` ADD CONSTRAINT `FK_TEAM_USER` FOREIGN KEY (`USERNAME`) REFERENCES `USER`(`USERNAME`);
ALTER TABLE `POKEMON` ADD CONSTRAINT `FK_POKEMON_TEAM` FOREIGN KEY (`TEAM_ID`, `USERNAME`) REFERENCES `TEAM`(`ID`, `USERNAME`);
ALTER TABLE `POKEMON` ADD CONSTRAINT `FK_POKEMON_WILD_POKEMON` FOREIGN KEY (`WILD_POKEMON_ID`) REFERENCES `WILD_POKEMON`(`ID`);
ALTER TABLE `POKEMON` ADD CONSTRAINT `FK_POKEMON_ABILITY` FOREIGN KEY (`ABILITY_ID`) REFERENCES `ABILITY`(`ID`);
ALTER TABLE `POKEMON` ADD CONSTRAINT `FK_POKEMON_ITEM` FOREIGN KEY (`ITEM_ID`) REFERENCES `ITEM`(`ID`);
ALTER TABLE `POKEMON` ADD CONSTRAINT `FK_POKEMON_NATURE` FOREIGN KEY (`NATURE_ID`) REFERENCES `NATURE`(`ID`);
ALTER TABLE `POKEMON_MOVE` ADD CONSTRAINT `FK_POKEMON_MOVE_POKEMON` FOREIGN KEY (`POKEMON_ID`, `TEAM_ID`, `USERNAME`) REFERENCES `POKEMON`(`ID`, `TEAM_ID`, `USERNAME`);
ALTER TABLE `POKEMON_MOVE` ADD CONSTRAINT `FK_POKEMON_MOVE_MOVE` FOREIGN KEY (`MOVE_ID`) REFERENCES `MOVE`(`ID`);

-- Procedures --

DELIMITER //
CREATE PROCEDURE TEAM_FREE_ID(IN USERNAME_IN VARCHAR(12), OUT I INT)
BEGIN
	SELECT MAX(ID) + 1 INTO @R FROM TEAM WHERE USERNAME = USERNAME_IN;
    IF @R IS NULL THEN
		SET I = 1;
	ELSE
		SET I = @R;
	END IF;
END//
DELIMITER ;

DELIMITER //
CREATE PROCEDURE POKEMON_FREE_ID(IN USERNAME_IN VARCHAR(12), IN TEAM_ID_IN INT, OUT I INT)
BEGIN
	SELECT MAX(ID) + 1 INTO @R FROM POKEMON WHERE USERNAME = USERNAME_IN AND TEAM_ID = TEAM_ID_IN;
    IF @R IS NULL THEN
		SET I = 1;
	ELSE
		SET I = @R;
	END IF;
END//
DELIMITER ;

-- Triggers --

DELIMITER //
CREATE TRIGGER INS_POKEMON
BEFORE INSERT
ON `POKEMON`
FOR EACH ROW
BEGIN
	IF NEW.NICKNAME IS NULL OR NEW.NICKNAME = "" THEN
		SELECT NAME INTO @NICKNAME FROM `WILD_POKEMON` WHERE `ID` = NEW.WILD_POKEMON_ID;
        SET NEW.NICKNAME = @NICKNAME;
    END IF;
    IF NEW.HP_EV IS NULL THEN
		SET NEW.HP_EV = 0;
    END IF;
    IF NEW.ATK_EV IS NULL THEN
		SET NEW.ATK_EV = 0;
    END IF;
    IF NEW.DEF_EV IS NULL THEN
		SET NEW.DEF_EV = 0;
    END IF;
    IF NEW.SP_ATK_EV IS NULL THEN
		SET NEW.SP_ATK_EV = 0;
    END IF;
    IF NEW.SP_DEF_EV IS NULL THEN
		SET NEW.SP_DEF_EV = 0;
    END IF;
    IF NEW.SPEED_EV IS NULL THEN
		SET NEW.SPEED_EV = 0;
    END IF;
    
    IF NEW.HP_IV IS NULL THEN
		SET NEW.HP_IV = 0;
    END IF;
    IF NEW.ATK_IV IS NULL THEN
		SET NEW.ATK_IV = 0;
    END IF;
    IF NEW.DEF_IV IS NULL THEN
		SET NEW.DEF_IV = 0;
    END IF;
    IF NEW.SP_ATK_IV IS NULL THEN
		SET NEW.SP_ATK_IV = 0;
    END IF;
    IF NEW.SP_DEF_IV IS NULL THEN
		SET NEW.SP_DEF_IV = 0;
    END IF;
    IF NEW.SPEED_IV IS NULL THEN
		SET NEW.SPEED_IV = 0;
    END IF;
END//
DELIMITER ;

-- select * from `wild_pokemon`;
-- select * from `type`;
-- select * from `wild_pokemon_type`;
-- select * from `user`;
-- select * from `team`;
-- select * from `pokemon`;
-- select * from `pokemon_move`;
-- select * from `item`;


-- delete from `pokemon_type`;
-- delete from `type`;
-- delete from `pokemon`;

-- set global time_zone = '-3:00';